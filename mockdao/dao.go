// Code generated by MockGen. DO NOT EDIT.
// Source: dao/dao.go

// Package mockdao is a generated GoMock package.
package mockdao

import (
	gomock "github.com/golang/mock/gomock"
	dao "github.com/wusidn/qiaqia/dao"
	reflect "reflect"
)

// MockDao is a mock of Dao interface
type MockDao struct {
	ctrl     *gomock.Controller
	recorder *MockDaoMockRecorder
}

// MockDaoMockRecorder is the mock recorder for MockDao
type MockDaoMockRecorder struct {
	mock *MockDao
}

// NewMockDao creates a new mock instance
func NewMockDao(ctrl *gomock.Controller) *MockDao {
	mock := &MockDao{ctrl: ctrl}
	mock.recorder = &MockDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDao) EXPECT() *MockDaoMockRecorder {
	return m.recorder
}

// GetTableUsers mocks base method
func (m *MockDao) GetTableUsers() dao.TableUsers {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTableUsers")
	ret0, _ := ret[0].(dao.TableUsers)
	return ret0
}

// GetTableUsers indicates an expected call of GetTableUsers
func (mr *MockDaoMockRecorder) GetTableUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTableUsers", reflect.TypeOf((*MockDao)(nil).GetTableUsers))
}

// Close mocks base method
func (m *MockDao) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close
func (mr *MockDaoMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockDao)(nil).Close))
}
